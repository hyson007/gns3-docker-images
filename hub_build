#!/bin/sh

# Start automated builds of :latest on Docker Hub
# Requires curl and jq <https://stedolan.github.io/jq/>
# API documentation from <https://github.com/RyanTheAllmighty/Docker-Hub-API>
#
# usage: hub_build <repository>...
#        No repository: all repositories with active automated build


USERNAME="ehlers"

# Test, if token is valid
TOKEN=`cat "${HOME}/.dockerhub_token" 2>/dev/null`
if [ -n "${TOKEN}" ]; then
	if [ -z "`curl -s -H "Authorization: JWT ${TOKEN}" https://hub.docker.com/v2/user/ | jq -r '.username // ""'`" ]; then
		TOKEN=""
		echo "${TOKEN}" > "${HOME}/.dockerhub_token"
	fi
fi

# Invalid token, ask for password
if [ -z "${TOKEN}" ]; then
	PASSWORD=""
	while [ -z "${PASSWORD}" ]; do
		printf "Password: "
		PASSWORD=`trap "stty echo 2>/dev/null" 0 1 2 3 6 9 14 15; stty -echo; read -r passwd 2>/dev/null; echo "${passwd}"`
		printf "\n"
	done

	TOKEN=`curl -s -H 'Content-Type: application/json' -X POST https://hub.docker.com/v2/users/login/ -d "{\"username\": \"${USERNAME}\", \"password\": \"${PASSWORD}\"}"| jq -r '.token // ""'`
	if [ -z "${TOKEN}" ]; then
		echo "Invalid username/password" >&2
		exit 1
	fi
	echo "${TOKEN}" > "${HOME}/.dockerhub_token"
fi

# get list of repositories
if [ $# -ge 1 ]; then	# repos from command line
	only_active=
	repo_list="$@"
	error=
	for repo in ${repo_list}; do
		if [ -z "`curl -s -H "Authorization: JWT ${TOKEN}" https://hub.docker.com/v2/repositories/${USERNAME}/${repo}/ | jq -r '.name // ""'`" ]; then
			echo "${repo}: unknown repository" >&2
			error="yes"
		fi
	done
	[ -n "$error" ] && exit 1
else			# all repos with active automated build
	only_active=1
	repo_list=`curl -s -H "Authorization: JWT ${TOKEN}" https://hub.docker.com/v2/users/${USERNAME}/repositories/?page_size=1000 | jq -r 'sort_by(.name)[].name'`
fi

# trigger repositories
for repo in ${repo_list}; do
	# check for automated build
	autobuild=`curl -s -H "Authorization: JWT ${TOKEN}" https://hub.docker.com/v2/repositories/${USERNAME}/${repo}/autobuild/`
	active=`echo "${autobuild}" | jq -r 'select(.active != null) | .active'`
	[ -z "${active}" ] && continue
	[ -n "${only_active}" -a "${active}" != "true" ] && continue

	# get trigger for :latest
	trigger=`echo "${autobuild}" | jq -cM '.build_tags[] | select(.name=="latest") | {dockerfile_location: .dockerfile_location, source_name: .source_name, source_type: .source_type}'`
	[ -z "${trigger}" ] && continue

	# trigger build
	echo "Triggering ${repo}"
	result=`curl -s -H "Authorization: JWT ${TOKEN}" -H 'Content-Type: application/json' -X POST https://hub.docker.com/v2/repositories/${USERNAME}/${repo}/autobuild/trigger-build/ -d "${trigger}" | jq -r '.[].msg'`
	echo "  >>> ${result}"
	sleep 1
done
